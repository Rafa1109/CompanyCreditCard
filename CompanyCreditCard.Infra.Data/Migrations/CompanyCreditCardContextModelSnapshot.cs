// <auto-generated />
using System;
using CompanyCreditCard.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CompanyCreditCard.Infra.Data.Migrations
{
    [DbContext(typeof(CompanyCreditCardContext))]
    partial class CompanyCreditCardContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CompanyCreditCard.Domain.Models.Cliente", b =>
                {
                    b.Property<int>("Cod_Cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cep")
                        .HasColumnType("varchar(8)");

                    b.Property<int>("DiaVencimentoCartao")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Endereco")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Login")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Municipio")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Senha")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Uf")
                        .HasColumnType("varchar(2)");

                    b.HasKey("Cod_Cliente");

                    b.ToTable("TB_CC_CLIENTE");
                });

            modelBuilder.Entity("CompanyCreditCard.Domain.Models.Compra", b =>
                {
                    b.Property<int>("CodCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodCliente")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCompra")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescrExtrato")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("QuantParcelas")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorCompra")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CodCompra");

                    b.HasIndex("CodCliente");

                    b.ToTable("TB_CC_COMPRA");
                });

            modelBuilder.Entity("CompanyCreditCard.Domain.Models.Fatura", b =>
                {
                    b.Property<int>("CodFatura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodCliente")
                        .HasColumnType("int");

                    b.Property<string>("CodigoBarra")
                        .HasColumnType("varchar(47)");

                    b.Property<DateTime?>("DataPagto")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ValorFatura")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CodFatura");

                    b.HasIndex("CodCliente");

                    b.ToTable("TB_CC_FATURA");
                });

            modelBuilder.Entity("CompanyCreditCard.Domain.Models.Parcela", b =>
                {
                    b.Property<int>("CodParcela")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodCompra")
                        .HasColumnType("int");

                    b.Property<int?>("CodFatura")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ValorParcela")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CodParcela");

                    b.HasIndex("CodCompra");

                    b.HasIndex("CodFatura");

                    b.ToTable("TB_CC_PARCELA");
                });

            modelBuilder.Entity("CompanyCreditCard.Domain.Models.Compra", b =>
                {
                    b.HasOne("CompanyCreditCard.Domain.Models.Cliente", "Cliente")
                        .WithMany("Compras")
                        .HasForeignKey("CodCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CompanyCreditCard.Domain.Models.Fatura", b =>
                {
                    b.HasOne("CompanyCreditCard.Domain.Models.Cliente", "Cliente")
                        .WithMany("Faturas")
                        .HasForeignKey("CodCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CompanyCreditCard.Domain.Models.Parcela", b =>
                {
                    b.HasOne("CompanyCreditCard.Domain.Models.Compra", "Compra")
                        .WithMany("Parcelas")
                        .HasForeignKey("CodCompra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanyCreditCard.Domain.Models.Fatura", "Fatura")
                        .WithMany("Parcelas")
                        .HasForeignKey("CodFatura")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
